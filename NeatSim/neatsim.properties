# Note to users of this properties file:
# It is currently not possible to specify the name or location of this file as a command line option to NeatSim
# This file has to be named "neatsim.properties" and be on the application's classpath
# This is easy to do / the location can easily be changed by one change in the Conf class

! Specify the mode to run the program in.
! Possible values are SERVER and EVALUATOR
! * In SERVER mode, the program starts listening for evaluation
!	calls on the specified port (access as defined in the Thrift interface)
! * In EVALUATOR mode, the program reads genomes from the disk,
!	evaluates them, writes results back to the disk and returns
#neatsim.mode = evaluator
neatsim.mode = server

#######################################################
#        SERVER MODE
#######################################################
! Port to run the server on (default: 7913)
neatsim.server.port = 7913
! Number of scenarios to use each generation
neatsim.server.gendreau.data.pergeneration = 3
! Directory to look for Gendreau scenarios (default: current directory)
neatsim.server.gendreau.data.directory = data
! Prefix of Gendreau scenarios to select (default: no filtering)
#neatsim.server.gendreau.data.prefix = train
! Suffix of Gendreau scenarios to select (default: no filtering)
#neatsim.server.gendreau.data.suffix = _450_24
#neatsim.server.gendreau.data.suffix = _240_24
#neatsim.server.gendreau.data.suffix = _240_33
! Internal Gendreau evaluator to use (default: distributed)
! Valid values are singlethreaded, multithreaded and distributed.
neatsim.server.gendreau.evaluator = distributed
! Stopcondition
! Valid values are simple and generations
neatsim.server.gendreau.stopcondition = simple
! Specifies the number of generations to stop after in the case of 'generations' stopcondition
#neatsim.server.gendreau.stopcondition.generations.number = 600
! Fitness transformer
! Valid values are INVERT, LINEAR and ABSOLUTE
neatsim.server.gendreau.fitnesstransformer.type = absolute
! Specifies the selective pressure in the case of linear fitness transformer
neatsim.server.gendreau.fitnesstransformer.linear.selectivepressure = 
! Specifies the maximum fitness value
! Valid values are integers (fitness=maxfitness-cost) or AUTO, in which case the maximum fitness is determined automatically
! The minimum fitness is then always 0
neatsim.server.gendreau.fitnesstransformer.absolute.maxfitness = 15000


#######################################################
#        EVALUATOR MODE
#######################################################
! Specify the type of evaluator
! Possible values are GENDREAU
neatsim.evaluator.type = gendreau
! Directory to look for genomes in (default: current directory)
#neatsim.evaluator.data.directory = short2_600-40_absolute15000_3
neatsim.evaluator.data.directory = short_600-40_absolute4000_3
neatsim.evaluator.data.directory = src/test/resources
! Prefix of genomes to select (default: no filtering)
#neatsim.evaluator.data.prefix = short_
#neatsim.evaluator.data.prefix = overfitting_600-30_absolute_champ_2504_20130418_031601.gnm
#neatsim.evaluator.data.prefix = short_600-40_absolute4000_3_champ_600_20130424_062331.gnm
#neatsim.evaluator.data.prefix = short2_600-40_absolute15000_3_champ_771_20130425_151344.gnm
#neatsim.evaluator.data.prefix = long_600-40_absolute15000_3_champ_160_20130426_042725.gnm
neatsim.evaluator.data.prefix = long_600-40_absolute15000_3_

! Wheter or not to dry run (default: false)
neatsim.evaluator.dryrun = true

! Suffix of genomes to select (default: no filtering)
neatsim.evaluator.data.suffix = .xml
! Number of times to evaluate the ANN (default: 3)
! Make sure that this is the same as the number of evaluations configured for SharpNEAT!!
neatsim.evaluator.evaluationsteps = 3
! True if the evaluator should check that each genome file contains only a single genome, false otherwise
! Default value is true
neatsim.evaluator.singletongenome = false
! True if the evaluator should evaluate all generations at the same time
! 	(in the case of distributed evaluation this corresponds to a single JPPF job)
! False if the evaluator should evaluate each generation separately, and write each generation back to the file
! Default value is false
neatsim.evaluator.batch = false
! Path to the output file (default: output.csv)
! This path should be writable.
! If a file already exists, it is emptied before writing starts, so be carful!
neatsim.evaluator.output.path = output.csv

### The following properties are applicable only for evaluators of type GENDREAU
! Directory with Gendreau scenarios (default: current directory)
#neatsim.evaluator.gendreau.data.directory = data
neatsim.evaluator.gendreau.data.directory = mydata

! Prefix of Gendreau scenarios to select (default: no filtering)
neatsim.evaluator.gendreau.data.prefix = test_
#neatsim.evaluator.gendreau.data.prefix = test_req_rapide_001_240_24
! Suffix of Gendreau scenarios to select (default: no filtering)
#neatsim.evaluator.gendreau.data.suffix = _240_24
neatsim.evaluator.gendreau.data.suffix = _450_24
! Number of scenarios to use in evaluation of nonfinal scenarios
neatsim.evaluator.gendreau.scenarios.number.nonfinal = 500
! Number of scenarios to use in evaluation of final genome
! The final scenario is the last scenario in the list of genomes specified by directory, prefix and suffix (ordered alphabetically, ascending)
neatsim.evaluator.gendreau.scenarios.number.final = 500
! Internal Gendreau evaluator to use (default: distributed)
! Valid values are SINGLETHREADED, MULTITHREADED and DISTRIBUTED.
neatsim.evaluator.gendreau.evaluator = singlethreaded
! True to enable the dataprovider, false to disable the dataprovider.
! If the number of scenarios to evaluate for is large with respect to the number of genomes
! and the internal evaluator is distributed, disable the dataprovider.
! (all scenario data is sent to all nodes, while the nodes really need only the data of a single scenario)
neatsim.evaluator.usedataprovider = false